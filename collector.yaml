extensions:
  health_check:
  zpages:
    endpoint: 0.0.0.0:55679
receivers:
  otlp:
    endpoint: 0.0.0.0:55680
  sapm:
    endpoint: 0.0.0.0:7276
  signalfx:
    endpoint: 0.0.0.0:9943
  # This section is used to collect OpenTelemetry metrics
  # Even if just a SignalFx ÂµAPM customer, these metrics are included
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']
              # If you want to use the environment filter
              # In the SignalFx dashboard
              #labels:
                #environment: demo
          metric_relabel_configs:
            - source_labels: [ __name__ ]
              regex: '.*grpc_io.*'
              action: drop
processors:
  batch:
  # Optional: If you have multiple environments
  # attributes/copyfromexistingkey:
    # actions:
    # - key: environment
      # from_attribute: YOUR_EXISTING_TAG
      # action: upsert
  # attributes/newenvironment:
    # actions:
    # - key: environment
      # value: "YOUR_ENVIRONMENT_NAME"
      # action: insert
  queued_retry:
  memory_limiter:
    ballast_size_mib: 683
    limit_mib: 1800
    spike_limit_mib: 500
exporters:
  # Traces
  sapm:
    access_token: "YOUR_ACCESS_TOKEN"
    endpoint: "https://ingest.YOUR_SIGNALFX_REALM.signalfx.com/v2/trace"
  # Metrics
  signalfx:
    access_token: "YOUR_ACCESS_TOKEN"
    realm: "YOUR_SIGNALFX_REALM"
service:
  pipelines:
  traces:
    receivers: [sapm, otlp]
    processors: [memory_limiter, batch, queued_retry]
    exporters: [sapm]
    metrics:
      receivers: [signalfx, prometheus, otlp]
      exporters: [signalfx]
  extensions: [health_check, zpages]
