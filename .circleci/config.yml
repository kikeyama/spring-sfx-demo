version: 2.1
jobs:
  manifest_pull_request:
    docker:
      # specify the version you desire here
      - image: cimg/base:stable-18.04

    working_directory: ~/

    environment:
      GH_CLI_VERSION: "0.11.1"

    steps:
      # Slack
      - slack/notify:
          channel: C015JGRS4VA
          color: '#42e2f4'
          mentions: 'U23ACBMB5,U7CCVF98S'
          message: k8s manifest編集してPR出すで
          webhook: ${SLACK_WEBHOOK}

      #- checkout

      - run:
          name: install gh
          command: |
            wget https://github.com/cli/cli/releases/download/v${GH_CLI_VERSION}/gh_${GH_CLI_VERSION}_linux_amd64.deb
            sudo dpkg --install ./gh_${GH_CLI_VERSION}_linux_amd64.deb
      - run:
          name: install kustomize
          command: |
            curl -s "https://raw.githubusercontent.com/\
            kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
      - run:
          name: clone manifest repository
          command: |
            git config --global user.name ${GITHUB_USERNAME}
            git config --global user.email ${GITHUB_EMAIL}
            git clone https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/${GITHUB_ORG}/${GITHUB_REPOSITORY}.git
      - run:
          name: update manifest
          command: |
            cd ${GITHUB_REPOSITORY}/${APP_DIR}
            git checkout -b gitops-${GITHUB_USERNAME}-${CIRCLE_SHA1}
            # Set new image tag
            ~/kustomize edit set image ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPOSITORY}:${CIRCLE_SHA1}
            # Set version as annotation and label
            ~/kustomize edit remove annotation version || true
            ~/kustomize edit add annotation version:${CIRCLE_SHA1}
            ~/kustomize edit remove label version || true
            ~/kustomize edit add label version:`echo ${CIRCLE_SHA1} | cut -b 1-7`
            git add .
            git commit -m "update ${APP_DIR} manifest for ${CIRCLE_SHA1}"
            git push origin gitops-${GITHUB_USERNAME}-${CIRCLE_SHA1}
      - run:
          name: create pull request
          command: |
            cd ~/${GITHUB_REPOSITORY}
            gh pr create \
              -t "deploy a new image ${APP_DIR}:${CIRCLE_SHA1}" \
              -b "CircleCI auto-generated pull request from https://github.com/${GITHUB_ORG}/${APP_DIR}/commit/${CIRCLE_SHA1}"

      # Slack
      - slack/status:
          #fail_only: true
          mentions: 'U23ACBMB5,U7CCVF98S'
          only_for_branches: master
          webhook: ${SLACK_WEBHOOK}

      # SignalFx
      - signalfx/job-event:
          signalfx_access_token: '${SIGNALFX_ACCESS_TOKEN}'
          signalfx_realm: '${SIGNALFX_REALM}'
          service: spring-sfx-demo
          event_type: build my app

      # Splunk
      - splunk/build-event:
          subject: notificatoin from build job
          message: Successfully finished build
          splunk_hec_host: '${SPLUNK_HEC_HOST}'
          splunk_hec_port: 8088
          splunk_hec_protocol: http
          splunk_hec_token: '${SPLUNK_HEC_TOKEN}'
          splunk_index: circleci

orbs:
  slack: circleci/slack@3.4.2
  signalfx: kikeyama/signalfx@0.1.1
  splunk: kikeyama/splunk@0.1.0
  aws-ecr: circleci/aws-ecr@6.12.2

workflows:
  main:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          checkout: true
          create-repo: false
          dockerfile: Dockerfile
          region: AWS_REGION
          repo: ${AWS_ECR_REPOSITORY}
          skip-when-tags-exist: false
          tag: 'latest,${CIRCLE_SHA1}'
          context: kikeyama-context
          filters:
            branches:
              only: 
                - master
      - slack/approval-notification:
          name: slack_approval_notification
          mentions: U23ACBMB5
          message: Pending approval
          webhook: ${SLACK_WEBHOOK}
          context: kikeyama-context
          requires:
            - aws-ecr/build-and-push-image
      - hold:
          type: approval
          requires:
            - slack_approval_notification
      - manifest_pull_request:
          context: kikeyama-context
          requires:
            - hold
      - signalfx/workflow-event:
          signalfx_access_token: '${SIGNALFX_ACCESS_TOKEN}'
          signalfx_realm: '${SIGNALFX_REALM}'
          service: spring-sfx-demo
          event_type: deploy
          context: kikeyama-context
          requires:
            - hold
            - manifest_pull_request
      - splunk/workflow-event:
          subject: notificatoin from main workflow
          message: Successfully finisheed deploying to my cluster
          splunk_hec_host: '${SPLUNK_HEC_HOST}'
          splunk_hec_port: 8088
          splunk_hec_protocol: http
          splunk_hec_token: '${SPLUNK_HEC_TOKEN}'
          splunk_index: circleci
          context: kikeyama-context
          requires:
            - hold
            - manifest_pull_request
